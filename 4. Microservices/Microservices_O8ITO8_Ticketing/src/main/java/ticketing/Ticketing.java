// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ticketing.proto

package ticketing;

public final class Ticketing {
  private Ticketing() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MovieOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ticketing.Movie)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 id = 1;</code>
     */
    int getId();

    /**
     * <code>string title = 2;</code>
     */
    java.lang.String getTitle();
    /**
     * <code>string title = 2;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();
  }
  /**
   * Protobuf type {@code ticketing.Movie}
   */
  public  static final class Movie extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ticketing.Movie)
      MovieOrBuilder {
    // Use Movie.newBuilder() to construct.
    private Movie(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Movie() {
      id_ = 0;
      title_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Movie(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              title_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ticketing.Ticketing.internal_static_ticketing_Movie_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ticketing.Ticketing.internal_static_ticketing_Movie_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ticketing.Ticketing.Movie.class, ticketing.Ticketing.Movie.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int TITLE_FIELD_NUMBER = 2;
    private volatile java.lang.Object title_;
    /**
     * <code>string title = 2;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        title_ = s;
        return s;
      }
    }
    /**
     * <code>string title = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (!getTitleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, title_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (!getTitleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, title_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ticketing.Ticketing.Movie)) {
        return super.equals(obj);
      }
      ticketing.Ticketing.Movie other = (ticketing.Ticketing.Movie) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && getTitle()
          .equals(other.getTitle());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + TITLE_FIELD_NUMBER;
      hash = (53 * hash) + getTitle().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ticketing.Ticketing.Movie parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ticketing.Ticketing.Movie parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ticketing.Ticketing.Movie parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ticketing.Ticketing.Movie parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ticketing.Ticketing.Movie parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.Movie parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ticketing.Ticketing.Movie parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.Movie parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ticketing.Ticketing.Movie parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.Movie parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ticketing.Ticketing.Movie prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ticketing.Movie}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ticketing.Movie)
        ticketing.Ticketing.MovieOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ticketing.Ticketing.internal_static_ticketing_Movie_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ticketing.Ticketing.internal_static_ticketing_Movie_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ticketing.Ticketing.Movie.class, ticketing.Ticketing.Movie.Builder.class);
      }

      // Construct using ticketing.Ticketing.Movie.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0;

        title_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ticketing.Ticketing.internal_static_ticketing_Movie_descriptor;
      }

      public ticketing.Ticketing.Movie getDefaultInstanceForType() {
        return ticketing.Ticketing.Movie.getDefaultInstance();
      }

      public ticketing.Ticketing.Movie build() {
        ticketing.Ticketing.Movie result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ticketing.Ticketing.Movie buildPartial() {
        ticketing.Ticketing.Movie result = new ticketing.Ticketing.Movie(this);
        result.id_ = id_;
        result.title_ = title_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ticketing.Ticketing.Movie) {
          return mergeFrom((ticketing.Ticketing.Movie)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ticketing.Ticketing.Movie other) {
        if (other == ticketing.Ticketing.Movie.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (!other.getTitle().isEmpty()) {
          title_ = other.title_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ticketing.Ticketing.Movie parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ticketing.Ticketing.Movie) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <code>int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 1;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object title_ = "";
      /**
       * <code>string title = 2;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string title = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string title = 2;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string title = 2;</code>
       */
      public Builder clearTitle() {
        
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <code>string title = 2;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        title_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ticketing.Movie)
    }

    // @@protoc_insertion_point(class_scope:ticketing.Movie)
    private static final ticketing.Ticketing.Movie DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ticketing.Ticketing.Movie();
    }

    public static ticketing.Ticketing.Movie getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Movie>
        PARSER = new com.google.protobuf.AbstractParser<Movie>() {
      public Movie parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Movie(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Movie> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Movie> getParserForType() {
      return PARSER;
    }

    public ticketing.Ticketing.Movie getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TicketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ticketing.Ticket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 movieId = 1;</code>
     */
    int getMovieId();

    /**
     * <code>int32 count = 2;</code>
     */
    int getCount();
  }
  /**
   * Protobuf type {@code ticketing.Ticket}
   */
  public  static final class Ticket extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ticketing.Ticket)
      TicketOrBuilder {
    // Use Ticket.newBuilder() to construct.
    private Ticket(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Ticket() {
      movieId_ = 0;
      count_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Ticket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              movieId_ = input.readInt32();
              break;
            }
            case 16: {

              count_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ticketing.Ticketing.internal_static_ticketing_Ticket_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ticketing.Ticketing.internal_static_ticketing_Ticket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ticketing.Ticketing.Ticket.class, ticketing.Ticketing.Ticket.Builder.class);
    }

    public static final int MOVIEID_FIELD_NUMBER = 1;
    private int movieId_;
    /**
     * <code>int32 movieId = 1;</code>
     */
    public int getMovieId() {
      return movieId_;
    }

    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_;
    /**
     * <code>int32 count = 2;</code>
     */
    public int getCount() {
      return count_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (movieId_ != 0) {
        output.writeInt32(1, movieId_);
      }
      if (count_ != 0) {
        output.writeInt32(2, count_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (movieId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, movieId_);
      }
      if (count_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, count_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ticketing.Ticketing.Ticket)) {
        return super.equals(obj);
      }
      ticketing.Ticketing.Ticket other = (ticketing.Ticketing.Ticket) obj;

      boolean result = true;
      result = result && (getMovieId()
          == other.getMovieId());
      result = result && (getCount()
          == other.getCount());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MOVIEID_FIELD_NUMBER;
      hash = (53 * hash) + getMovieId();
      hash = (37 * hash) + COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getCount();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ticketing.Ticketing.Ticket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ticketing.Ticketing.Ticket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ticketing.Ticketing.Ticket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ticketing.Ticketing.Ticket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ticketing.Ticketing.Ticket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.Ticket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ticketing.Ticketing.Ticket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.Ticket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ticketing.Ticketing.Ticket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.Ticket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ticketing.Ticketing.Ticket prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ticketing.Ticket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ticketing.Ticket)
        ticketing.Ticketing.TicketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ticketing.Ticketing.internal_static_ticketing_Ticket_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ticketing.Ticketing.internal_static_ticketing_Ticket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ticketing.Ticketing.Ticket.class, ticketing.Ticketing.Ticket.Builder.class);
      }

      // Construct using ticketing.Ticketing.Ticket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        movieId_ = 0;

        count_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ticketing.Ticketing.internal_static_ticketing_Ticket_descriptor;
      }

      public ticketing.Ticketing.Ticket getDefaultInstanceForType() {
        return ticketing.Ticketing.Ticket.getDefaultInstance();
      }

      public ticketing.Ticketing.Ticket build() {
        ticketing.Ticketing.Ticket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ticketing.Ticketing.Ticket buildPartial() {
        ticketing.Ticketing.Ticket result = new ticketing.Ticketing.Ticket(this);
        result.movieId_ = movieId_;
        result.count_ = count_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ticketing.Ticketing.Ticket) {
          return mergeFrom((ticketing.Ticketing.Ticket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ticketing.Ticketing.Ticket other) {
        if (other == ticketing.Ticketing.Ticket.getDefaultInstance()) return this;
        if (other.getMovieId() != 0) {
          setMovieId(other.getMovieId());
        }
        if (other.getCount() != 0) {
          setCount(other.getCount());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ticketing.Ticketing.Ticket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ticketing.Ticketing.Ticket) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int movieId_ ;
      /**
       * <code>int32 movieId = 1;</code>
       */
      public int getMovieId() {
        return movieId_;
      }
      /**
       * <code>int32 movieId = 1;</code>
       */
      public Builder setMovieId(int value) {
        
        movieId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 movieId = 1;</code>
       */
      public Builder clearMovieId() {
        
        movieId_ = 0;
        onChanged();
        return this;
      }

      private int count_ ;
      /**
       * <code>int32 count = 2;</code>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>int32 count = 2;</code>
       */
      public Builder setCount(int value) {
        
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 count = 2;</code>
       */
      public Builder clearCount() {
        
        count_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ticketing.Ticket)
    }

    // @@protoc_insertion_point(class_scope:ticketing.Ticket)
    private static final ticketing.Ticketing.Ticket DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ticketing.Ticketing.Ticket();
    }

    public static ticketing.Ticketing.Ticket getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Ticket>
        PARSER = new com.google.protobuf.AbstractParser<Ticket>() {
      public Ticket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Ticket(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Ticket> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Ticket> getParserForType() {
      return PARSER;
    }

    public ticketing.Ticketing.Ticket getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetMoviesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ticketing.GetMoviesRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 year = 1;</code>
     */
    int getYear();
  }
  /**
   * Protobuf type {@code ticketing.GetMoviesRequest}
   */
  public  static final class GetMoviesRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ticketing.GetMoviesRequest)
      GetMoviesRequestOrBuilder {
    // Use GetMoviesRequest.newBuilder() to construct.
    private GetMoviesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetMoviesRequest() {
      year_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GetMoviesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              year_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ticketing.Ticketing.internal_static_ticketing_GetMoviesRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ticketing.Ticketing.internal_static_ticketing_GetMoviesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ticketing.Ticketing.GetMoviesRequest.class, ticketing.Ticketing.GetMoviesRequest.Builder.class);
    }

    public static final int YEAR_FIELD_NUMBER = 1;
    private int year_;
    /**
     * <code>int32 year = 1;</code>
     */
    public int getYear() {
      return year_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (year_ != 0) {
        output.writeInt32(1, year_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (year_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, year_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ticketing.Ticketing.GetMoviesRequest)) {
        return super.equals(obj);
      }
      ticketing.Ticketing.GetMoviesRequest other = (ticketing.Ticketing.GetMoviesRequest) obj;

      boolean result = true;
      result = result && (getYear()
          == other.getYear());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + YEAR_FIELD_NUMBER;
      hash = (53 * hash) + getYear();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ticketing.Ticketing.GetMoviesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ticketing.Ticketing.GetMoviesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ticketing.Ticketing.GetMoviesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ticketing.Ticketing.GetMoviesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ticketing.Ticketing.GetMoviesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.GetMoviesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ticketing.Ticketing.GetMoviesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.GetMoviesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ticketing.Ticketing.GetMoviesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.GetMoviesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ticketing.Ticketing.GetMoviesRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ticketing.GetMoviesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ticketing.GetMoviesRequest)
        ticketing.Ticketing.GetMoviesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ticketing.Ticketing.internal_static_ticketing_GetMoviesRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ticketing.Ticketing.internal_static_ticketing_GetMoviesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ticketing.Ticketing.GetMoviesRequest.class, ticketing.Ticketing.GetMoviesRequest.Builder.class);
      }

      // Construct using ticketing.Ticketing.GetMoviesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        year_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ticketing.Ticketing.internal_static_ticketing_GetMoviesRequest_descriptor;
      }

      public ticketing.Ticketing.GetMoviesRequest getDefaultInstanceForType() {
        return ticketing.Ticketing.GetMoviesRequest.getDefaultInstance();
      }

      public ticketing.Ticketing.GetMoviesRequest build() {
        ticketing.Ticketing.GetMoviesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ticketing.Ticketing.GetMoviesRequest buildPartial() {
        ticketing.Ticketing.GetMoviesRequest result = new ticketing.Ticketing.GetMoviesRequest(this);
        result.year_ = year_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ticketing.Ticketing.GetMoviesRequest) {
          return mergeFrom((ticketing.Ticketing.GetMoviesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ticketing.Ticketing.GetMoviesRequest other) {
        if (other == ticketing.Ticketing.GetMoviesRequest.getDefaultInstance()) return this;
        if (other.getYear() != 0) {
          setYear(other.getYear());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ticketing.Ticketing.GetMoviesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ticketing.Ticketing.GetMoviesRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int year_ ;
      /**
       * <code>int32 year = 1;</code>
       */
      public int getYear() {
        return year_;
      }
      /**
       * <code>int32 year = 1;</code>
       */
      public Builder setYear(int value) {
        
        year_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 year = 1;</code>
       */
      public Builder clearYear() {
        
        year_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ticketing.GetMoviesRequest)
    }

    // @@protoc_insertion_point(class_scope:ticketing.GetMoviesRequest)
    private static final ticketing.Ticketing.GetMoviesRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ticketing.Ticketing.GetMoviesRequest();
    }

    public static ticketing.Ticketing.GetMoviesRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetMoviesRequest>
        PARSER = new com.google.protobuf.AbstractParser<GetMoviesRequest>() {
      public GetMoviesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GetMoviesRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetMoviesRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetMoviesRequest> getParserForType() {
      return PARSER;
    }

    public ticketing.Ticketing.GetMoviesRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetMoviesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ticketing.GetMoviesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .ticketing.Movie movie = 1;</code>
     */
    java.util.List<ticketing.Ticketing.Movie> 
        getMovieList();
    /**
     * <code>repeated .ticketing.Movie movie = 1;</code>
     */
    ticketing.Ticketing.Movie getMovie(int index);
    /**
     * <code>repeated .ticketing.Movie movie = 1;</code>
     */
    int getMovieCount();
    /**
     * <code>repeated .ticketing.Movie movie = 1;</code>
     */
    java.util.List<? extends ticketing.Ticketing.MovieOrBuilder> 
        getMovieOrBuilderList();
    /**
     * <code>repeated .ticketing.Movie movie = 1;</code>
     */
    ticketing.Ticketing.MovieOrBuilder getMovieOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ticketing.GetMoviesResponse}
   */
  public  static final class GetMoviesResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ticketing.GetMoviesResponse)
      GetMoviesResponseOrBuilder {
    // Use GetMoviesResponse.newBuilder() to construct.
    private GetMoviesResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetMoviesResponse() {
      movie_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GetMoviesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                movie_ = new java.util.ArrayList<ticketing.Ticketing.Movie>();
                mutable_bitField0_ |= 0x00000001;
              }
              movie_.add(
                  input.readMessage(ticketing.Ticketing.Movie.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          movie_ = java.util.Collections.unmodifiableList(movie_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ticketing.Ticketing.internal_static_ticketing_GetMoviesResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ticketing.Ticketing.internal_static_ticketing_GetMoviesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ticketing.Ticketing.GetMoviesResponse.class, ticketing.Ticketing.GetMoviesResponse.Builder.class);
    }

    public static final int MOVIE_FIELD_NUMBER = 1;
    private java.util.List<ticketing.Ticketing.Movie> movie_;
    /**
     * <code>repeated .ticketing.Movie movie = 1;</code>
     */
    public java.util.List<ticketing.Ticketing.Movie> getMovieList() {
      return movie_;
    }
    /**
     * <code>repeated .ticketing.Movie movie = 1;</code>
     */
    public java.util.List<? extends ticketing.Ticketing.MovieOrBuilder> 
        getMovieOrBuilderList() {
      return movie_;
    }
    /**
     * <code>repeated .ticketing.Movie movie = 1;</code>
     */
    public int getMovieCount() {
      return movie_.size();
    }
    /**
     * <code>repeated .ticketing.Movie movie = 1;</code>
     */
    public ticketing.Ticketing.Movie getMovie(int index) {
      return movie_.get(index);
    }
    /**
     * <code>repeated .ticketing.Movie movie = 1;</code>
     */
    public ticketing.Ticketing.MovieOrBuilder getMovieOrBuilder(
        int index) {
      return movie_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < movie_.size(); i++) {
        output.writeMessage(1, movie_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < movie_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, movie_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ticketing.Ticketing.GetMoviesResponse)) {
        return super.equals(obj);
      }
      ticketing.Ticketing.GetMoviesResponse other = (ticketing.Ticketing.GetMoviesResponse) obj;

      boolean result = true;
      result = result && getMovieList()
          .equals(other.getMovieList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getMovieCount() > 0) {
        hash = (37 * hash) + MOVIE_FIELD_NUMBER;
        hash = (53 * hash) + getMovieList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ticketing.Ticketing.GetMoviesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ticketing.Ticketing.GetMoviesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ticketing.Ticketing.GetMoviesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ticketing.Ticketing.GetMoviesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ticketing.Ticketing.GetMoviesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.GetMoviesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ticketing.Ticketing.GetMoviesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.GetMoviesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ticketing.Ticketing.GetMoviesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.GetMoviesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ticketing.Ticketing.GetMoviesResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ticketing.GetMoviesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ticketing.GetMoviesResponse)
        ticketing.Ticketing.GetMoviesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ticketing.Ticketing.internal_static_ticketing_GetMoviesResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ticketing.Ticketing.internal_static_ticketing_GetMoviesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ticketing.Ticketing.GetMoviesResponse.class, ticketing.Ticketing.GetMoviesResponse.Builder.class);
      }

      // Construct using ticketing.Ticketing.GetMoviesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMovieFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (movieBuilder_ == null) {
          movie_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          movieBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ticketing.Ticketing.internal_static_ticketing_GetMoviesResponse_descriptor;
      }

      public ticketing.Ticketing.GetMoviesResponse getDefaultInstanceForType() {
        return ticketing.Ticketing.GetMoviesResponse.getDefaultInstance();
      }

      public ticketing.Ticketing.GetMoviesResponse build() {
        ticketing.Ticketing.GetMoviesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ticketing.Ticketing.GetMoviesResponse buildPartial() {
        ticketing.Ticketing.GetMoviesResponse result = new ticketing.Ticketing.GetMoviesResponse(this);
        int from_bitField0_ = bitField0_;
        if (movieBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            movie_ = java.util.Collections.unmodifiableList(movie_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.movie_ = movie_;
        } else {
          result.movie_ = movieBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ticketing.Ticketing.GetMoviesResponse) {
          return mergeFrom((ticketing.Ticketing.GetMoviesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ticketing.Ticketing.GetMoviesResponse other) {
        if (other == ticketing.Ticketing.GetMoviesResponse.getDefaultInstance()) return this;
        if (movieBuilder_ == null) {
          if (!other.movie_.isEmpty()) {
            if (movie_.isEmpty()) {
              movie_ = other.movie_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMovieIsMutable();
              movie_.addAll(other.movie_);
            }
            onChanged();
          }
        } else {
          if (!other.movie_.isEmpty()) {
            if (movieBuilder_.isEmpty()) {
              movieBuilder_.dispose();
              movieBuilder_ = null;
              movie_ = other.movie_;
              bitField0_ = (bitField0_ & ~0x00000001);
              movieBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMovieFieldBuilder() : null;
            } else {
              movieBuilder_.addAllMessages(other.movie_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ticketing.Ticketing.GetMoviesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ticketing.Ticketing.GetMoviesResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<ticketing.Ticketing.Movie> movie_ =
        java.util.Collections.emptyList();
      private void ensureMovieIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          movie_ = new java.util.ArrayList<ticketing.Ticketing.Movie>(movie_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          ticketing.Ticketing.Movie, ticketing.Ticketing.Movie.Builder, ticketing.Ticketing.MovieOrBuilder> movieBuilder_;

      /**
       * <code>repeated .ticketing.Movie movie = 1;</code>
       */
      public java.util.List<ticketing.Ticketing.Movie> getMovieList() {
        if (movieBuilder_ == null) {
          return java.util.Collections.unmodifiableList(movie_);
        } else {
          return movieBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ticketing.Movie movie = 1;</code>
       */
      public int getMovieCount() {
        if (movieBuilder_ == null) {
          return movie_.size();
        } else {
          return movieBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ticketing.Movie movie = 1;</code>
       */
      public ticketing.Ticketing.Movie getMovie(int index) {
        if (movieBuilder_ == null) {
          return movie_.get(index);
        } else {
          return movieBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ticketing.Movie movie = 1;</code>
       */
      public Builder setMovie(
          int index, ticketing.Ticketing.Movie value) {
        if (movieBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMovieIsMutable();
          movie_.set(index, value);
          onChanged();
        } else {
          movieBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ticketing.Movie movie = 1;</code>
       */
      public Builder setMovie(
          int index, ticketing.Ticketing.Movie.Builder builderForValue) {
        if (movieBuilder_ == null) {
          ensureMovieIsMutable();
          movie_.set(index, builderForValue.build());
          onChanged();
        } else {
          movieBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ticketing.Movie movie = 1;</code>
       */
      public Builder addMovie(ticketing.Ticketing.Movie value) {
        if (movieBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMovieIsMutable();
          movie_.add(value);
          onChanged();
        } else {
          movieBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ticketing.Movie movie = 1;</code>
       */
      public Builder addMovie(
          int index, ticketing.Ticketing.Movie value) {
        if (movieBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMovieIsMutable();
          movie_.add(index, value);
          onChanged();
        } else {
          movieBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ticketing.Movie movie = 1;</code>
       */
      public Builder addMovie(
          ticketing.Ticketing.Movie.Builder builderForValue) {
        if (movieBuilder_ == null) {
          ensureMovieIsMutable();
          movie_.add(builderForValue.build());
          onChanged();
        } else {
          movieBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ticketing.Movie movie = 1;</code>
       */
      public Builder addMovie(
          int index, ticketing.Ticketing.Movie.Builder builderForValue) {
        if (movieBuilder_ == null) {
          ensureMovieIsMutable();
          movie_.add(index, builderForValue.build());
          onChanged();
        } else {
          movieBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ticketing.Movie movie = 1;</code>
       */
      public Builder addAllMovie(
          java.lang.Iterable<? extends ticketing.Ticketing.Movie> values) {
        if (movieBuilder_ == null) {
          ensureMovieIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, movie_);
          onChanged();
        } else {
          movieBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ticketing.Movie movie = 1;</code>
       */
      public Builder clearMovie() {
        if (movieBuilder_ == null) {
          movie_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          movieBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ticketing.Movie movie = 1;</code>
       */
      public Builder removeMovie(int index) {
        if (movieBuilder_ == null) {
          ensureMovieIsMutable();
          movie_.remove(index);
          onChanged();
        } else {
          movieBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ticketing.Movie movie = 1;</code>
       */
      public ticketing.Ticketing.Movie.Builder getMovieBuilder(
          int index) {
        return getMovieFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ticketing.Movie movie = 1;</code>
       */
      public ticketing.Ticketing.MovieOrBuilder getMovieOrBuilder(
          int index) {
        if (movieBuilder_ == null) {
          return movie_.get(index);  } else {
          return movieBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ticketing.Movie movie = 1;</code>
       */
      public java.util.List<? extends ticketing.Ticketing.MovieOrBuilder> 
           getMovieOrBuilderList() {
        if (movieBuilder_ != null) {
          return movieBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(movie_);
        }
      }
      /**
       * <code>repeated .ticketing.Movie movie = 1;</code>
       */
      public ticketing.Ticketing.Movie.Builder addMovieBuilder() {
        return getMovieFieldBuilder().addBuilder(
            ticketing.Ticketing.Movie.getDefaultInstance());
      }
      /**
       * <code>repeated .ticketing.Movie movie = 1;</code>
       */
      public ticketing.Ticketing.Movie.Builder addMovieBuilder(
          int index) {
        return getMovieFieldBuilder().addBuilder(
            index, ticketing.Ticketing.Movie.getDefaultInstance());
      }
      /**
       * <code>repeated .ticketing.Movie movie = 1;</code>
       */
      public java.util.List<ticketing.Ticketing.Movie.Builder> 
           getMovieBuilderList() {
        return getMovieFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          ticketing.Ticketing.Movie, ticketing.Ticketing.Movie.Builder, ticketing.Ticketing.MovieOrBuilder> 
          getMovieFieldBuilder() {
        if (movieBuilder_ == null) {
          movieBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              ticketing.Ticketing.Movie, ticketing.Ticketing.Movie.Builder, ticketing.Ticketing.MovieOrBuilder>(
                  movie_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          movie_ = null;
        }
        return movieBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ticketing.GetMoviesResponse)
    }

    // @@protoc_insertion_point(class_scope:ticketing.GetMoviesResponse)
    private static final ticketing.Ticketing.GetMoviesResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ticketing.Ticketing.GetMoviesResponse();
    }

    public static ticketing.Ticketing.GetMoviesResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetMoviesResponse>
        PARSER = new com.google.protobuf.AbstractParser<GetMoviesResponse>() {
      public GetMoviesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GetMoviesResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetMoviesResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetMoviesResponse> getParserForType() {
      return PARSER;
    }

    public ticketing.Ticketing.GetMoviesResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BuyTicketsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ticketing.BuyTicketsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 movieId = 1;</code>
     */
    int getMovieId();

    /**
     * <code>int32 count = 2;</code>
     */
    int getCount();

    /**
     * <code>string cardNumber = 3;</code>
     */
    java.lang.String getCardNumber();
    /**
     * <code>string cardNumber = 3;</code>
     */
    com.google.protobuf.ByteString
        getCardNumberBytes();
  }
  /**
   * Protobuf type {@code ticketing.BuyTicketsRequest}
   */
  public  static final class BuyTicketsRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ticketing.BuyTicketsRequest)
      BuyTicketsRequestOrBuilder {
    // Use BuyTicketsRequest.newBuilder() to construct.
    private BuyTicketsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BuyTicketsRequest() {
      movieId_ = 0;
      count_ = 0;
      cardNumber_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private BuyTicketsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              movieId_ = input.readInt32();
              break;
            }
            case 16: {

              count_ = input.readInt32();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              cardNumber_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ticketing.Ticketing.internal_static_ticketing_BuyTicketsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ticketing.Ticketing.internal_static_ticketing_BuyTicketsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ticketing.Ticketing.BuyTicketsRequest.class, ticketing.Ticketing.BuyTicketsRequest.Builder.class);
    }

    public static final int MOVIEID_FIELD_NUMBER = 1;
    private int movieId_;
    /**
     * <code>int32 movieId = 1;</code>
     */
    public int getMovieId() {
      return movieId_;
    }

    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_;
    /**
     * <code>int32 count = 2;</code>
     */
    public int getCount() {
      return count_;
    }

    public static final int CARDNUMBER_FIELD_NUMBER = 3;
    private volatile java.lang.Object cardNumber_;
    /**
     * <code>string cardNumber = 3;</code>
     */
    public java.lang.String getCardNumber() {
      java.lang.Object ref = cardNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cardNumber_ = s;
        return s;
      }
    }
    /**
     * <code>string cardNumber = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCardNumberBytes() {
      java.lang.Object ref = cardNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cardNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (movieId_ != 0) {
        output.writeInt32(1, movieId_);
      }
      if (count_ != 0) {
        output.writeInt32(2, count_);
      }
      if (!getCardNumberBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, cardNumber_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (movieId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, movieId_);
      }
      if (count_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, count_);
      }
      if (!getCardNumberBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, cardNumber_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ticketing.Ticketing.BuyTicketsRequest)) {
        return super.equals(obj);
      }
      ticketing.Ticketing.BuyTicketsRequest other = (ticketing.Ticketing.BuyTicketsRequest) obj;

      boolean result = true;
      result = result && (getMovieId()
          == other.getMovieId());
      result = result && (getCount()
          == other.getCount());
      result = result && getCardNumber()
          .equals(other.getCardNumber());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MOVIEID_FIELD_NUMBER;
      hash = (53 * hash) + getMovieId();
      hash = (37 * hash) + COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getCount();
      hash = (37 * hash) + CARDNUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getCardNumber().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ticketing.Ticketing.BuyTicketsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ticketing.Ticketing.BuyTicketsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ticketing.Ticketing.BuyTicketsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ticketing.Ticketing.BuyTicketsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ticketing.Ticketing.BuyTicketsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.BuyTicketsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ticketing.Ticketing.BuyTicketsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.BuyTicketsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ticketing.Ticketing.BuyTicketsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.BuyTicketsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ticketing.Ticketing.BuyTicketsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ticketing.BuyTicketsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ticketing.BuyTicketsRequest)
        ticketing.Ticketing.BuyTicketsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ticketing.Ticketing.internal_static_ticketing_BuyTicketsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ticketing.Ticketing.internal_static_ticketing_BuyTicketsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ticketing.Ticketing.BuyTicketsRequest.class, ticketing.Ticketing.BuyTicketsRequest.Builder.class);
      }

      // Construct using ticketing.Ticketing.BuyTicketsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        movieId_ = 0;

        count_ = 0;

        cardNumber_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ticketing.Ticketing.internal_static_ticketing_BuyTicketsRequest_descriptor;
      }

      public ticketing.Ticketing.BuyTicketsRequest getDefaultInstanceForType() {
        return ticketing.Ticketing.BuyTicketsRequest.getDefaultInstance();
      }

      public ticketing.Ticketing.BuyTicketsRequest build() {
        ticketing.Ticketing.BuyTicketsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ticketing.Ticketing.BuyTicketsRequest buildPartial() {
        ticketing.Ticketing.BuyTicketsRequest result = new ticketing.Ticketing.BuyTicketsRequest(this);
        result.movieId_ = movieId_;
        result.count_ = count_;
        result.cardNumber_ = cardNumber_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ticketing.Ticketing.BuyTicketsRequest) {
          return mergeFrom((ticketing.Ticketing.BuyTicketsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ticketing.Ticketing.BuyTicketsRequest other) {
        if (other == ticketing.Ticketing.BuyTicketsRequest.getDefaultInstance()) return this;
        if (other.getMovieId() != 0) {
          setMovieId(other.getMovieId());
        }
        if (other.getCount() != 0) {
          setCount(other.getCount());
        }
        if (!other.getCardNumber().isEmpty()) {
          cardNumber_ = other.cardNumber_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ticketing.Ticketing.BuyTicketsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ticketing.Ticketing.BuyTicketsRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int movieId_ ;
      /**
       * <code>int32 movieId = 1;</code>
       */
      public int getMovieId() {
        return movieId_;
      }
      /**
       * <code>int32 movieId = 1;</code>
       */
      public Builder setMovieId(int value) {
        
        movieId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 movieId = 1;</code>
       */
      public Builder clearMovieId() {
        
        movieId_ = 0;
        onChanged();
        return this;
      }

      private int count_ ;
      /**
       * <code>int32 count = 2;</code>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>int32 count = 2;</code>
       */
      public Builder setCount(int value) {
        
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 count = 2;</code>
       */
      public Builder clearCount() {
        
        count_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object cardNumber_ = "";
      /**
       * <code>string cardNumber = 3;</code>
       */
      public java.lang.String getCardNumber() {
        java.lang.Object ref = cardNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cardNumber_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string cardNumber = 3;</code>
       */
      public com.google.protobuf.ByteString
          getCardNumberBytes() {
        java.lang.Object ref = cardNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cardNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string cardNumber = 3;</code>
       */
      public Builder setCardNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        cardNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string cardNumber = 3;</code>
       */
      public Builder clearCardNumber() {
        
        cardNumber_ = getDefaultInstance().getCardNumber();
        onChanged();
        return this;
      }
      /**
       * <code>string cardNumber = 3;</code>
       */
      public Builder setCardNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        cardNumber_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ticketing.BuyTicketsRequest)
    }

    // @@protoc_insertion_point(class_scope:ticketing.BuyTicketsRequest)
    private static final ticketing.Ticketing.BuyTicketsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ticketing.Ticketing.BuyTicketsRequest();
    }

    public static ticketing.Ticketing.BuyTicketsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BuyTicketsRequest>
        PARSER = new com.google.protobuf.AbstractParser<BuyTicketsRequest>() {
      public BuyTicketsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new BuyTicketsRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BuyTicketsRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BuyTicketsRequest> getParserForType() {
      return PARSER;
    }

    public ticketing.Ticketing.BuyTicketsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BuyTicketsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ticketing.BuyTicketsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool success = 1;</code>
     */
    boolean getSuccess();
  }
  /**
   * Protobuf type {@code ticketing.BuyTicketsResponse}
   */
  public  static final class BuyTicketsResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ticketing.BuyTicketsResponse)
      BuyTicketsResponseOrBuilder {
    // Use BuyTicketsResponse.newBuilder() to construct.
    private BuyTicketsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BuyTicketsResponse() {
      success_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private BuyTicketsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              success_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ticketing.Ticketing.internal_static_ticketing_BuyTicketsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ticketing.Ticketing.internal_static_ticketing_BuyTicketsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ticketing.Ticketing.BuyTicketsResponse.class, ticketing.Ticketing.BuyTicketsResponse.Builder.class);
    }

    public static final int SUCCESS_FIELD_NUMBER = 1;
    private boolean success_;
    /**
     * <code>bool success = 1;</code>
     */
    public boolean getSuccess() {
      return success_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (success_ != false) {
        output.writeBool(1, success_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (success_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, success_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ticketing.Ticketing.BuyTicketsResponse)) {
        return super.equals(obj);
      }
      ticketing.Ticketing.BuyTicketsResponse other = (ticketing.Ticketing.BuyTicketsResponse) obj;

      boolean result = true;
      result = result && (getSuccess()
          == other.getSuccess());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SUCCESS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSuccess());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ticketing.Ticketing.BuyTicketsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ticketing.Ticketing.BuyTicketsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ticketing.Ticketing.BuyTicketsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ticketing.Ticketing.BuyTicketsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ticketing.Ticketing.BuyTicketsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.BuyTicketsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ticketing.Ticketing.BuyTicketsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.BuyTicketsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ticketing.Ticketing.BuyTicketsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.BuyTicketsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ticketing.Ticketing.BuyTicketsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ticketing.BuyTicketsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ticketing.BuyTicketsResponse)
        ticketing.Ticketing.BuyTicketsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ticketing.Ticketing.internal_static_ticketing_BuyTicketsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ticketing.Ticketing.internal_static_ticketing_BuyTicketsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ticketing.Ticketing.BuyTicketsResponse.class, ticketing.Ticketing.BuyTicketsResponse.Builder.class);
      }

      // Construct using ticketing.Ticketing.BuyTicketsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        success_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ticketing.Ticketing.internal_static_ticketing_BuyTicketsResponse_descriptor;
      }

      public ticketing.Ticketing.BuyTicketsResponse getDefaultInstanceForType() {
        return ticketing.Ticketing.BuyTicketsResponse.getDefaultInstance();
      }

      public ticketing.Ticketing.BuyTicketsResponse build() {
        ticketing.Ticketing.BuyTicketsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ticketing.Ticketing.BuyTicketsResponse buildPartial() {
        ticketing.Ticketing.BuyTicketsResponse result = new ticketing.Ticketing.BuyTicketsResponse(this);
        result.success_ = success_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ticketing.Ticketing.BuyTicketsResponse) {
          return mergeFrom((ticketing.Ticketing.BuyTicketsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ticketing.Ticketing.BuyTicketsResponse other) {
        if (other == ticketing.Ticketing.BuyTicketsResponse.getDefaultInstance()) return this;
        if (other.getSuccess() != false) {
          setSuccess(other.getSuccess());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ticketing.Ticketing.BuyTicketsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ticketing.Ticketing.BuyTicketsResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean success_ ;
      /**
       * <code>bool success = 1;</code>
       */
      public boolean getSuccess() {
        return success_;
      }
      /**
       * <code>bool success = 1;</code>
       */
      public Builder setSuccess(boolean value) {
        
        success_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool success = 1;</code>
       */
      public Builder clearSuccess() {
        
        success_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ticketing.BuyTicketsResponse)
    }

    // @@protoc_insertion_point(class_scope:ticketing.BuyTicketsResponse)
    private static final ticketing.Ticketing.BuyTicketsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ticketing.Ticketing.BuyTicketsResponse();
    }

    public static ticketing.Ticketing.BuyTicketsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BuyTicketsResponse>
        PARSER = new com.google.protobuf.AbstractParser<BuyTicketsResponse>() {
      public BuyTicketsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new BuyTicketsResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BuyTicketsResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BuyTicketsResponse> getParserForType() {
      return PARSER;
    }

    public ticketing.Ticketing.BuyTicketsResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetTicketsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ticketing.GetTicketsRequest)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code ticketing.GetTicketsRequest}
   */
  public  static final class GetTicketsRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ticketing.GetTicketsRequest)
      GetTicketsRequestOrBuilder {
    // Use GetTicketsRequest.newBuilder() to construct.
    private GetTicketsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetTicketsRequest() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GetTicketsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ticketing.Ticketing.internal_static_ticketing_GetTicketsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ticketing.Ticketing.internal_static_ticketing_GetTicketsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ticketing.Ticketing.GetTicketsRequest.class, ticketing.Ticketing.GetTicketsRequest.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ticketing.Ticketing.GetTicketsRequest)) {
        return super.equals(obj);
      }
      ticketing.Ticketing.GetTicketsRequest other = (ticketing.Ticketing.GetTicketsRequest) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ticketing.Ticketing.GetTicketsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ticketing.Ticketing.GetTicketsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ticketing.Ticketing.GetTicketsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ticketing.Ticketing.GetTicketsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ticketing.Ticketing.GetTicketsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.GetTicketsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ticketing.Ticketing.GetTicketsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.GetTicketsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ticketing.Ticketing.GetTicketsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.GetTicketsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ticketing.Ticketing.GetTicketsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ticketing.GetTicketsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ticketing.GetTicketsRequest)
        ticketing.Ticketing.GetTicketsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ticketing.Ticketing.internal_static_ticketing_GetTicketsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ticketing.Ticketing.internal_static_ticketing_GetTicketsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ticketing.Ticketing.GetTicketsRequest.class, ticketing.Ticketing.GetTicketsRequest.Builder.class);
      }

      // Construct using ticketing.Ticketing.GetTicketsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ticketing.Ticketing.internal_static_ticketing_GetTicketsRequest_descriptor;
      }

      public ticketing.Ticketing.GetTicketsRequest getDefaultInstanceForType() {
        return ticketing.Ticketing.GetTicketsRequest.getDefaultInstance();
      }

      public ticketing.Ticketing.GetTicketsRequest build() {
        ticketing.Ticketing.GetTicketsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ticketing.Ticketing.GetTicketsRequest buildPartial() {
        ticketing.Ticketing.GetTicketsRequest result = new ticketing.Ticketing.GetTicketsRequest(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ticketing.Ticketing.GetTicketsRequest) {
          return mergeFrom((ticketing.Ticketing.GetTicketsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ticketing.Ticketing.GetTicketsRequest other) {
        if (other == ticketing.Ticketing.GetTicketsRequest.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ticketing.Ticketing.GetTicketsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ticketing.Ticketing.GetTicketsRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ticketing.GetTicketsRequest)
    }

    // @@protoc_insertion_point(class_scope:ticketing.GetTicketsRequest)
    private static final ticketing.Ticketing.GetTicketsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ticketing.Ticketing.GetTicketsRequest();
    }

    public static ticketing.Ticketing.GetTicketsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetTicketsRequest>
        PARSER = new com.google.protobuf.AbstractParser<GetTicketsRequest>() {
      public GetTicketsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GetTicketsRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetTicketsRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetTicketsRequest> getParserForType() {
      return PARSER;
    }

    public ticketing.Ticketing.GetTicketsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetTicketsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ticketing.GetTicketsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .ticketing.Ticket ticket = 1;</code>
     */
    java.util.List<ticketing.Ticketing.Ticket> 
        getTicketList();
    /**
     * <code>repeated .ticketing.Ticket ticket = 1;</code>
     */
    ticketing.Ticketing.Ticket getTicket(int index);
    /**
     * <code>repeated .ticketing.Ticket ticket = 1;</code>
     */
    int getTicketCount();
    /**
     * <code>repeated .ticketing.Ticket ticket = 1;</code>
     */
    java.util.List<? extends ticketing.Ticketing.TicketOrBuilder> 
        getTicketOrBuilderList();
    /**
     * <code>repeated .ticketing.Ticket ticket = 1;</code>
     */
    ticketing.Ticketing.TicketOrBuilder getTicketOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ticketing.GetTicketsResponse}
   */
  public  static final class GetTicketsResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ticketing.GetTicketsResponse)
      GetTicketsResponseOrBuilder {
    // Use GetTicketsResponse.newBuilder() to construct.
    private GetTicketsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetTicketsResponse() {
      ticket_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GetTicketsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                ticket_ = new java.util.ArrayList<ticketing.Ticketing.Ticket>();
                mutable_bitField0_ |= 0x00000001;
              }
              ticket_.add(
                  input.readMessage(ticketing.Ticketing.Ticket.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          ticket_ = java.util.Collections.unmodifiableList(ticket_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ticketing.Ticketing.internal_static_ticketing_GetTicketsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ticketing.Ticketing.internal_static_ticketing_GetTicketsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ticketing.Ticketing.GetTicketsResponse.class, ticketing.Ticketing.GetTicketsResponse.Builder.class);
    }

    public static final int TICKET_FIELD_NUMBER = 1;
    private java.util.List<ticketing.Ticketing.Ticket> ticket_;
    /**
     * <code>repeated .ticketing.Ticket ticket = 1;</code>
     */
    public java.util.List<ticketing.Ticketing.Ticket> getTicketList() {
      return ticket_;
    }
    /**
     * <code>repeated .ticketing.Ticket ticket = 1;</code>
     */
    public java.util.List<? extends ticketing.Ticketing.TicketOrBuilder> 
        getTicketOrBuilderList() {
      return ticket_;
    }
    /**
     * <code>repeated .ticketing.Ticket ticket = 1;</code>
     */
    public int getTicketCount() {
      return ticket_.size();
    }
    /**
     * <code>repeated .ticketing.Ticket ticket = 1;</code>
     */
    public ticketing.Ticketing.Ticket getTicket(int index) {
      return ticket_.get(index);
    }
    /**
     * <code>repeated .ticketing.Ticket ticket = 1;</code>
     */
    public ticketing.Ticketing.TicketOrBuilder getTicketOrBuilder(
        int index) {
      return ticket_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < ticket_.size(); i++) {
        output.writeMessage(1, ticket_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < ticket_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, ticket_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ticketing.Ticketing.GetTicketsResponse)) {
        return super.equals(obj);
      }
      ticketing.Ticketing.GetTicketsResponse other = (ticketing.Ticketing.GetTicketsResponse) obj;

      boolean result = true;
      result = result && getTicketList()
          .equals(other.getTicketList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTicketCount() > 0) {
        hash = (37 * hash) + TICKET_FIELD_NUMBER;
        hash = (53 * hash) + getTicketList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ticketing.Ticketing.GetTicketsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ticketing.Ticketing.GetTicketsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ticketing.Ticketing.GetTicketsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ticketing.Ticketing.GetTicketsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ticketing.Ticketing.GetTicketsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.GetTicketsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ticketing.Ticketing.GetTicketsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.GetTicketsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ticketing.Ticketing.GetTicketsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ticketing.Ticketing.GetTicketsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ticketing.Ticketing.GetTicketsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ticketing.GetTicketsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ticketing.GetTicketsResponse)
        ticketing.Ticketing.GetTicketsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ticketing.Ticketing.internal_static_ticketing_GetTicketsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ticketing.Ticketing.internal_static_ticketing_GetTicketsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ticketing.Ticketing.GetTicketsResponse.class, ticketing.Ticketing.GetTicketsResponse.Builder.class);
      }

      // Construct using ticketing.Ticketing.GetTicketsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTicketFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (ticketBuilder_ == null) {
          ticket_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ticketBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ticketing.Ticketing.internal_static_ticketing_GetTicketsResponse_descriptor;
      }

      public ticketing.Ticketing.GetTicketsResponse getDefaultInstanceForType() {
        return ticketing.Ticketing.GetTicketsResponse.getDefaultInstance();
      }

      public ticketing.Ticketing.GetTicketsResponse build() {
        ticketing.Ticketing.GetTicketsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ticketing.Ticketing.GetTicketsResponse buildPartial() {
        ticketing.Ticketing.GetTicketsResponse result = new ticketing.Ticketing.GetTicketsResponse(this);
        int from_bitField0_ = bitField0_;
        if (ticketBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            ticket_ = java.util.Collections.unmodifiableList(ticket_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.ticket_ = ticket_;
        } else {
          result.ticket_ = ticketBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ticketing.Ticketing.GetTicketsResponse) {
          return mergeFrom((ticketing.Ticketing.GetTicketsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ticketing.Ticketing.GetTicketsResponse other) {
        if (other == ticketing.Ticketing.GetTicketsResponse.getDefaultInstance()) return this;
        if (ticketBuilder_ == null) {
          if (!other.ticket_.isEmpty()) {
            if (ticket_.isEmpty()) {
              ticket_ = other.ticket_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTicketIsMutable();
              ticket_.addAll(other.ticket_);
            }
            onChanged();
          }
        } else {
          if (!other.ticket_.isEmpty()) {
            if (ticketBuilder_.isEmpty()) {
              ticketBuilder_.dispose();
              ticketBuilder_ = null;
              ticket_ = other.ticket_;
              bitField0_ = (bitField0_ & ~0x00000001);
              ticketBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTicketFieldBuilder() : null;
            } else {
              ticketBuilder_.addAllMessages(other.ticket_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ticketing.Ticketing.GetTicketsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ticketing.Ticketing.GetTicketsResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<ticketing.Ticketing.Ticket> ticket_ =
        java.util.Collections.emptyList();
      private void ensureTicketIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          ticket_ = new java.util.ArrayList<ticketing.Ticketing.Ticket>(ticket_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          ticketing.Ticketing.Ticket, ticketing.Ticketing.Ticket.Builder, ticketing.Ticketing.TicketOrBuilder> ticketBuilder_;

      /**
       * <code>repeated .ticketing.Ticket ticket = 1;</code>
       */
      public java.util.List<ticketing.Ticketing.Ticket> getTicketList() {
        if (ticketBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ticket_);
        } else {
          return ticketBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ticketing.Ticket ticket = 1;</code>
       */
      public int getTicketCount() {
        if (ticketBuilder_ == null) {
          return ticket_.size();
        } else {
          return ticketBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ticketing.Ticket ticket = 1;</code>
       */
      public ticketing.Ticketing.Ticket getTicket(int index) {
        if (ticketBuilder_ == null) {
          return ticket_.get(index);
        } else {
          return ticketBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ticketing.Ticket ticket = 1;</code>
       */
      public Builder setTicket(
          int index, ticketing.Ticketing.Ticket value) {
        if (ticketBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTicketIsMutable();
          ticket_.set(index, value);
          onChanged();
        } else {
          ticketBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ticketing.Ticket ticket = 1;</code>
       */
      public Builder setTicket(
          int index, ticketing.Ticketing.Ticket.Builder builderForValue) {
        if (ticketBuilder_ == null) {
          ensureTicketIsMutable();
          ticket_.set(index, builderForValue.build());
          onChanged();
        } else {
          ticketBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ticketing.Ticket ticket = 1;</code>
       */
      public Builder addTicket(ticketing.Ticketing.Ticket value) {
        if (ticketBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTicketIsMutable();
          ticket_.add(value);
          onChanged();
        } else {
          ticketBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ticketing.Ticket ticket = 1;</code>
       */
      public Builder addTicket(
          int index, ticketing.Ticketing.Ticket value) {
        if (ticketBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTicketIsMutable();
          ticket_.add(index, value);
          onChanged();
        } else {
          ticketBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ticketing.Ticket ticket = 1;</code>
       */
      public Builder addTicket(
          ticketing.Ticketing.Ticket.Builder builderForValue) {
        if (ticketBuilder_ == null) {
          ensureTicketIsMutable();
          ticket_.add(builderForValue.build());
          onChanged();
        } else {
          ticketBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ticketing.Ticket ticket = 1;</code>
       */
      public Builder addTicket(
          int index, ticketing.Ticketing.Ticket.Builder builderForValue) {
        if (ticketBuilder_ == null) {
          ensureTicketIsMutable();
          ticket_.add(index, builderForValue.build());
          onChanged();
        } else {
          ticketBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ticketing.Ticket ticket = 1;</code>
       */
      public Builder addAllTicket(
          java.lang.Iterable<? extends ticketing.Ticketing.Ticket> values) {
        if (ticketBuilder_ == null) {
          ensureTicketIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ticket_);
          onChanged();
        } else {
          ticketBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ticketing.Ticket ticket = 1;</code>
       */
      public Builder clearTicket() {
        if (ticketBuilder_ == null) {
          ticket_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          ticketBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ticketing.Ticket ticket = 1;</code>
       */
      public Builder removeTicket(int index) {
        if (ticketBuilder_ == null) {
          ensureTicketIsMutable();
          ticket_.remove(index);
          onChanged();
        } else {
          ticketBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ticketing.Ticket ticket = 1;</code>
       */
      public ticketing.Ticketing.Ticket.Builder getTicketBuilder(
          int index) {
        return getTicketFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ticketing.Ticket ticket = 1;</code>
       */
      public ticketing.Ticketing.TicketOrBuilder getTicketOrBuilder(
          int index) {
        if (ticketBuilder_ == null) {
          return ticket_.get(index);  } else {
          return ticketBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ticketing.Ticket ticket = 1;</code>
       */
      public java.util.List<? extends ticketing.Ticketing.TicketOrBuilder> 
           getTicketOrBuilderList() {
        if (ticketBuilder_ != null) {
          return ticketBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ticket_);
        }
      }
      /**
       * <code>repeated .ticketing.Ticket ticket = 1;</code>
       */
      public ticketing.Ticketing.Ticket.Builder addTicketBuilder() {
        return getTicketFieldBuilder().addBuilder(
            ticketing.Ticketing.Ticket.getDefaultInstance());
      }
      /**
       * <code>repeated .ticketing.Ticket ticket = 1;</code>
       */
      public ticketing.Ticketing.Ticket.Builder addTicketBuilder(
          int index) {
        return getTicketFieldBuilder().addBuilder(
            index, ticketing.Ticketing.Ticket.getDefaultInstance());
      }
      /**
       * <code>repeated .ticketing.Ticket ticket = 1;</code>
       */
      public java.util.List<ticketing.Ticketing.Ticket.Builder> 
           getTicketBuilderList() {
        return getTicketFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          ticketing.Ticketing.Ticket, ticketing.Ticketing.Ticket.Builder, ticketing.Ticketing.TicketOrBuilder> 
          getTicketFieldBuilder() {
        if (ticketBuilder_ == null) {
          ticketBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              ticketing.Ticketing.Ticket, ticketing.Ticketing.Ticket.Builder, ticketing.Ticketing.TicketOrBuilder>(
                  ticket_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          ticket_ = null;
        }
        return ticketBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ticketing.GetTicketsResponse)
    }

    // @@protoc_insertion_point(class_scope:ticketing.GetTicketsResponse)
    private static final ticketing.Ticketing.GetTicketsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ticketing.Ticketing.GetTicketsResponse();
    }

    public static ticketing.Ticketing.GetTicketsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetTicketsResponse>
        PARSER = new com.google.protobuf.AbstractParser<GetTicketsResponse>() {
      public GetTicketsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GetTicketsResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetTicketsResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetTicketsResponse> getParserForType() {
      return PARSER;
    }

    public ticketing.Ticketing.GetTicketsResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ticketing_Movie_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ticketing_Movie_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ticketing_Ticket_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ticketing_Ticket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ticketing_GetMoviesRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ticketing_GetMoviesRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ticketing_GetMoviesResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ticketing_GetMoviesResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ticketing_BuyTicketsRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ticketing_BuyTicketsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ticketing_BuyTicketsResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ticketing_BuyTicketsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ticketing_GetTicketsRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ticketing_GetTicketsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ticketing_GetTicketsResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ticketing_GetTicketsResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017ticketing.proto\022\tticketing\"\"\n\005Movie\022\n\n" +
      "\002id\030\001 \001(\005\022\r\n\005title\030\002 \001(\t\"(\n\006Ticket\022\017\n\007mo" +
      "vieId\030\001 \001(\005\022\r\n\005count\030\002 \001(\005\" \n\020GetMoviesR" +
      "equest\022\014\n\004year\030\001 \001(\005\"4\n\021GetMoviesRespons" +
      "e\022\037\n\005movie\030\001 \003(\0132\020.ticketing.Movie\"G\n\021Bu" +
      "yTicketsRequest\022\017\n\007movieId\030\001 \001(\005\022\r\n\005coun" +
      "t\030\002 \001(\005\022\022\n\ncardNumber\030\003 \001(\t\"%\n\022BuyTicket" +
      "sResponse\022\017\n\007success\030\001 \001(\010\"\023\n\021GetTickets" +
      "Request\"7\n\022GetTicketsResponse\022!\n\006ticket\030" +
      "\001 \003(\0132\021.ticketing.Ticketb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_ticketing_Movie_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ticketing_Movie_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ticketing_Movie_descriptor,
        new java.lang.String[] { "Id", "Title", });
    internal_static_ticketing_Ticket_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ticketing_Ticket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ticketing_Ticket_descriptor,
        new java.lang.String[] { "MovieId", "Count", });
    internal_static_ticketing_GetMoviesRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_ticketing_GetMoviesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ticketing_GetMoviesRequest_descriptor,
        new java.lang.String[] { "Year", });
    internal_static_ticketing_GetMoviesResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_ticketing_GetMoviesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ticketing_GetMoviesResponse_descriptor,
        new java.lang.String[] { "Movie", });
    internal_static_ticketing_BuyTicketsRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_ticketing_BuyTicketsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ticketing_BuyTicketsRequest_descriptor,
        new java.lang.String[] { "MovieId", "Count", "CardNumber", });
    internal_static_ticketing_BuyTicketsResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_ticketing_BuyTicketsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ticketing_BuyTicketsResponse_descriptor,
        new java.lang.String[] { "Success", });
    internal_static_ticketing_GetTicketsRequest_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_ticketing_GetTicketsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ticketing_GetTicketsRequest_descriptor,
        new java.lang.String[] { });
    internal_static_ticketing_GetTicketsResponse_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_ticketing_GetTicketsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ticketing_GetTicketsResponse_descriptor,
        new java.lang.String[] { "Ticket", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
